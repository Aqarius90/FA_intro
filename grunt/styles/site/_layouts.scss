/**
 * LAYOUTS
 * --
 * A list of set layout styles based on a grid system. Each layout is held
 * within a mixin and so can be called against any class.
 */

/**
 * HTML EXAMPLE:
--------------------------------------------------------------------------------
<div class="layout-6-3-3">
    <div>
        COLUMN 1
    </div>

    <div>
        COLUMN 2
    </div>

    <div>
        COLUMN 3
    </div>
</div>
--------------------------------------------------------------------------------
 */


/**
 * column spacing
 * --
 * Defining column spacing variable.
 */
$col-spacing:20px;


/**
 * column
 * --
 * Mixin used to format single column widths.
 */
@mixin column($col:1, $span:12, $direction:ltr, $gutter:$col-spacing) {
    @if ($direction == ltr) {
        float:left;

        &:not(:last-child) {
            margin-right:$gutter;
        }
    } @else if ($direction == rtl) {
        float:right;

        &:not(:last-child) {
            margin-left:$gutter;
        }
    }
    @include calc(width, '((#{$col} / #{$span}) * 100%)  - (#{$gutter} * ((#{$span} - #{$col}) / #{$span}))');
}


/**
 * Even split sub-layout - No collapse by default.
 */
@mixin layout-2-2($collapse:no-collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2) {
                @include column(2, 4);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            @include column(2, 4);
        }
    }
}


/**
 * Even split sub-layout
 */
@mixin layout-3-3($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2) {
                @include column(3, 6);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            @include column(3, 6);
        }
    }
}

/**
 * An odd split sub-layout
 */
@mixin layout-5-3($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(5, 8);
            }

            > :nth-child(2) {
                @include column(3, 8);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            > :nth-child(1) {
                @include column(5, 8);
            }

            > :nth-child(2) {
                @include column(3, 8);
            }
        }
    }
}



/**
 * Even split layout
 */
@mixin layout-6-6($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2) {
                @include column(6, 12);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            @include column(6, 12);
            margin-top:0;
        }
    }
}


/**
 * Even split layout
 */
@mixin layout-6-6-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2) {
                @include column(6, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            @include column(6, 12, rtl);
        }
    }
}


/**
 * Even sub split layout
 */
@mixin layout-4-4($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2) {
                @include column(4, 8);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2) {
            @include column(4, 8);
        }
    }
}


/**
 * Triple split layout
 */
@mixin layout-4-4-4($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :not(:first-child) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2), > :nth-child(3)  {
                @include column(4, 12);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2), > :nth-child(3)  {
            @include column(4, 12);
        }
    }
}

/**
 * Triple split layout
 */
@mixin layout-4-4-4-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :not(:first-child) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1), > :nth-child(2), > :nth-child(3)  {
                @include column(4, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1), > :nth-child(2), > :nth-child(3)  {
            @include column(4, 12, rtl);
        }
    }
}


/**
 * Main section with aside
 */
@mixin layout-8-4($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(8, 12);
            }
            > :nth-child(2) {
                @include column(4, 12);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(8, 12);
        }
        > :nth-child(2) {
            @include column(4, 12);
        }
    }
}


/**
 * Main section with aside but in reverse order so that the 1st item in the HTML
 * structure is the aside.
 */
@mixin layout-8-4-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(4, 12, rtl);
            }
            > :nth-child(2) {
                @include column(8, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(4, 12, rtl);
        }
        > :nth-child(2) {
            @include column(8, 12, rtl);
        }
    }
}


/**
 * Main section with aside but in reverse order so that the 1st item in the HTML
 * structure is the aside.
 */
@mixin layout-4-8-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(8, 12, rtl);
            }
            > :nth-child(2) {
                @include column(4, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(8, 12, rtl);
        }
        > :nth-child(2) {
            @include column(4, 12, rtl);
        }
    }
}

/**
 * Main section with aside but in reverse order so that the 1st item in the HTML
 * structure is the aside.
 */
@mixin layout-3-9-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(9, 12, rtl);
            }
            > :nth-child(2) {
                @include column(3, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(9, 12, rtl);
        }
        > :nth-child(2) {
            @include column(3, 12, rtl);
        }
    }
}

/**
 * Main section with aside
 */
@mixin layout-7-5($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(7, 12);
            }
            > :nth-child(2) {
                @include column(5, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(7, 12);
        }
        > :nth-child(2) {
            @include column(5, 12, rtl);
        }
    }
}

/**
 * Main section with aside
 */
@mixin layout-7-5-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(5, 12, rtl);
            }
            > :nth-child(2) {
                @include column(7, 12);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(5, 12, rtl);
        }
        > :nth-child(2) {
            @include column(7, 12);
        }
    }
}




/**
 * Main section with aside
 */
@mixin layout-7-4($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(7, 12);
            }
            > :nth-child(2) {
                @include column(4, 12, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(7, 12);
        }
        > :nth-child(2) {
            @include column(4, 12, rtl);
        }
    }
}

/**
 * Main section with aside
 */
@mixin layout-7-4-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(4, 12, rtl);
            }
            > :nth-child(2) {
                @include column(7, 12);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(4, 12, rtl);
        }
        > :nth-child(2) {
            @include column(7, 12);
        }
    }
}

/**
 * Main section with aside
 */
@mixin layout-10-2-reverse($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(10, 12, rtl);
            }
            > :nth-child(2) {
                @include column(2, 12);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(10, 12, rtl);
        }
        > :nth-child(2) {
            @include column(2, 12);
        }
    }
}

/**
 * Main section with aside
 */
@mixin layout-1-3-3($collapse:collapse, $margin:$col-spacing) {
    @if $margin != 'null' {
        margin:$margin 0;
    }
    @include clearfix();

    @if $collapse == collapse {
        @include media-tablet-max {
            > :nth-child(2) {
                margin-top:20px;
            }
            > :nth-child(3) {
                margin-top:20px;
            }
        }

        @include media-tablet-min {
            > :nth-child(1) {
                @include column(1, 7);
            }
            > :nth-child(2), > :nth-child(3) {
                @include column(3, 7, rtl);
            }
        }
    } @else {
        > :nth-child(1) {
            @include column(1, 7);
        }
        > :nth-child(2), > :nth-child(3) {
            @include column(3, 7, rtl);
        }
    }
}

/**
 * Generic layout classes
 * --
 * that can be used where the only styling requirement
 * of the the section is columns.
 */


/**
 * Layout-4-4-4
 * --
 * Triple split layout.
 */
.layout-4-4-4 {
    @include layout-4-4-4;
}

/**
 * Layout-4-4-4-reverse
 * --
 * Triple split layout.
 */
.layout-4-4-4-reverse {
    @include layout-4-4-4-reverse;
}

/**
 * Layout-6-6
 * --
 * Even split layout
 */
.layout-6-6 {
    @include layout-6-6;
}


/**
 * Layout-6-6
 * --
 * Even split layout
 */
.layout-6-6.layout-6-6--no-collapse {
    @include layout-6-6($collapse:no-collapse);
}

/**
 * Layout-6-6
 * --
 * Even split layout
 */
.layout-6-6-reverse {
    @include layout-6-6-reverse;
}


/**
 * Layout-3-3
 * --
 * Sub-layout even split
 */
.layout-3-3 {
    @include layout-3-3;
}


/**
 * Layout-4-4
 * --
 * Sub-layout even split
 */
.layout-4-4 {
    @include layout-4-4;
}


/**
 * Layout-8-4
 * --
 * Content with aside split
 */
.layout-8-4 {
    @include layout-8-4;
}


/**
 * Layout-8-4 reverse
 * --
 * Content with aside split but in reverse order so that the 1st item in the
 * HTML structure is the aside.
 */
.layout-8-4-reverse {
    @include layout-8-4-reverse;
}


/**
 * Layout-4-8 reverse
 * --
 * Content with aside (on the left) split but in reverse order so that the 1st
 * item in the HTML structure is the aside.
 */
.layout-4-8-reverse {
    @include layout-4-8-reverse;
}

/**
 * Layout-3-9 reverse
 * --
 * Content with aside (on the left) split but in reverse order so that the 1st
 * item in the HTML structure is the aside.
 */
.layout-3-9-reverse {
    @include layout-3-9-reverse;
}


/**
 * Layout-7-4
 * --
 * Thin content with aside split (forms usually)
 */
.layout-7-4 {
    @include layout-7-4;
}

/**
 * Layout-7-4-reverse
 * --
 * Thin content with aside split (forms usually)
 * Content with aside (on the left) split but in reverse order so that the 1st
 * item in the HTML structure is the aside.
 */
.layout-7-4-reverse {
    @include layout-7-4-reverse;
}

/**
 * Layout-7-5
 * --
 * Thin content with aside split (forms usually)
 */
.layout-7-5 {
    @include layout-7-5;
}

/**
 * Layout-7-5-reverse
 * --
 * Thin content with aside split (forms usually) flipped
 */
.layout-7-5-reverse {
    @include layout-7-5-reverse;
}

/**
 * Layout-1-3-3
 * --
 * Thin content with aside split (forms usually)
 * Content with aside (on the left) split but in reverse order so that the 1st
 * item in the HTML structure is the aside.
 */
.layout-1-3-3 {
    @include layout-1-3-3;
}

/**
 * Layout-10-2
 * --
 * Used for when there is a thin navigation that should flow underneath in mob 
 */
.layout-10-2-reverse {
    @include layout-10-2-reverse;
}

/**
 * Sub layout is given to layouts that are nested within another layout.
 * This simply removes the margin top and bottom from element.
 * --
 *
 */
.sub-layout {
    @include media-tablet-min {
        margin-bottom:0;
        margin-top:0;
    }
}

/**
 * Layout test
 * --
 * This class is applied to the layouts on the layout page as a way to
 * visually show elements position and size.
 */
.layout-test {
    > * {
        background:#D7E2E6;
        border-radius:4px;
        min-height:100px;
    }

    > .layout-test {
        > * {
            background:#efefef;
            border-radius:4px;
        }
    }
}